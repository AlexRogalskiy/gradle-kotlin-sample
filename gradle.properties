###
### Kotlin properties
###
# Kotlin code style for this project: "official" or "obsolete":
kotlin.code.style=official
kotlin.parallel.tasks.in.project=true
kotlin.native.disableCompilerDaemon=true
kotlin.native.ignoreDisabledTargets=true
kotlin.native.enableDependencyPropagation=false
kotlin.native.cacheKind=none
kotlin.mpp.stability.nowarn=true
kotlin.mpp.enableGranularSourceSetsMetadata=true
kotlin.mpp.enableCompatibilityMetadataVariant=true
kotlin.incremental.multiplatform=true
kotlin.caching.enabled=true
###
### Gradle properties
###
org.gradle.daemon=true
org.gradle.configureondemand=true
org.gradle.parallel=false
org.gradle.caching=false
org.gradle.console=rich
org.gradle.vfs.watch=true
org.gradle.workers.max=1
org.gradle.logging.level=lifecycle
# Increase max heap for dokka on Java 11
org.gradle.jvmargs=-Xmx2g -XX:MaxMetaspaceSize=756m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
org.gradle.internal.publish.checksums.insecure=true
org.gradle.unsafe.configuration-cache-problems=warn
org.gradle.unsafe.configuration-cache=false
###
### Kapt properties
###
# Kapt can reuse gradle workers
# Enable Kotlin incremental compilation
kapt.incremental=true
kapt.use.worker.api=true
# Turn off AP discovery in compile path to enable compile avoidance
kapt.include.compile.classpath=false
###
### System properties
###
systemProp.sonar.host.url=http://localhost:9000
systemProp.file.encoding=UTF-8
systemProp.kotlin.native.disableCompilerDaemon=true
systemProp.org.gradle.internal.publish.checksums.insecure=true
systemProp.org.gradle.jvmargs=-Xmx2g -XX:MaxMetaspaceSize=756m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
# To enable fail-fast checks for type-safe accessors.
# To make GeneratePrecompiledScriptPluginAccessors cacheable.
systemProp.org.gradle.kotlin.dsl.precompiled.accessors.strict=true
###
### Project properties
###
appTitle=gradle-kotlin-sample
appDescription=Gradle kotlin sample project
appGroup=io.nullables.api.sample
appVersion=1.0.0
baseUrl="https://github.com/AlexRogalskiy/gradle-kotlin-sample"
